'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.5446
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos


#Region "Auditoria"
Public Class Auditoria
    
    Const _Procedimiento As String = "proc_Auditoria"
    
    Private mRestriccion As Restriccion = Nothing
    
    Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _EsNuevo As Boolean)
        MyBase.New
        OperadorDatos = _OperadorDatos
        EsNuevo = _EsNuevo
    End Sub
    
    Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Usuari_Codigo As String, ByVal _Parame_Opciones As Integer, ByVal _Pardet_Opciones As Integer, ByVal _Audito_Secuencia As Integer)
        Me.New(_OperadorDatos, false)
        Usuari_Codigo = _Usuari_Codigo
        Parame_Opciones = _Parame_Opciones
        Pardet_Opciones = _Pardet_Opciones
        Audito_Secuencia = _Audito_Secuencia
        If Me.Recargar Then
        Else
            Throw New System.Exception("No se puede cargar objeto Auditoria")
        End If
    End Sub
    
    'Restriccion
    Public Overridable Property Restriccion() As Restriccion
        Get
            Return Me.mRestriccion
        End Get
        Set
            Me.mRestriccion = value
        End Set
    End Property
    
    Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
        Usuari_Codigo = CType(Fila("Usuari_Codigo"),String)
        Parame_Opciones = CType(Fila("Parame_Opciones"),Integer)
        Pardet_Opciones = CType(Fila("Pardet_Opciones"),Integer)
        Audito_Secuencia = CType(Fila("Audito_Secuencia"),Integer)
        Audito_Descripcion = CType(Fila("Audito_Descripcion"),String)
        Audito_FechaHora = CType(Fila("Audito_FechaHora"),Date)
        Parame_TipoAccion = CType(Fila("Parame_TipoAccion"),Integer)
        Pardet_TipoAccion = CType(Fila("Pardet_TipoAccion"),Integer)
        mRestriccion = Nothing
    End Sub
    
    Public Overridable Function Recargar() As Boolean
        Dim Result As System.Data.DataTable = New System.Data.DataTable
        Dim bReturn As Boolean = true
        OperadorDatos.AgregarParametro("@accion", "C")
        OperadorDatos.AgregarParametro("@Usuari_Codigo", Usuari_Codigo)
        OperadorDatos.AgregarParametro("@Parame_Opciones", Parame_Opciones)
        OperadorDatos.AgregarParametro("@Pardet_Opciones", Pardet_Opciones)
        OperadorDatos.AgregarParametro("@Audito_Secuencia", Audito_Secuencia)
        OperadorDatos.Procedimiento = _Procedimiento
        bReturn = OperadorDatos.Ejecutar(Result)
        OperadorDatos.LimpiarParametros
        Try 
      Me.MapearDataRowaObjeto(Result.Rows(0))
            EsNuevo = false
            EsModificado = false
        Catch ex As System.Exception
            bReturn = false
        End Try
        Return bReturn
    End Function
    
    Public Overridable Function Guardar() As Boolean
        Dim Result As Integer = 0
        Dim bReturn As Boolean = true
        Dim sAccion As String = "M"
        If esNuevo Then
            sAccion = "I"
        End If
        OperadorDatos.AgregarParametro("@accion", sAccion)
        OperadorDatos.AgregarParametro("@Usuari_Codigo", Usuari_Codigo)
        OperadorDatos.AgregarParametro("@Parame_Opciones", Parame_Opciones)
        OperadorDatos.AgregarParametro("@Pardet_Opciones", Pardet_Opciones)
        OperadorDatos.AgregarParametro("@Audito_Secuencia", Audito_Secuencia)
        OperadorDatos.AgregarParametro("@Audito_Descripcion", Audito_Descripcion)
        OperadorDatos.AgregarParametro("@Audito_FechaHora", Audito_FechaHora)
        OperadorDatos.AgregarParametro("@Parame_TipoAccion", Parame_TipoAccion)
        OperadorDatos.AgregarParametro("@Pardet_TipoAccion", Pardet_TipoAccion)
        OperadorDatos.Procedimiento = _Procedimiento
        bReturn = OperadorDatos.Ejecutar(Result)
        OperadorDatos.LimpiarParametros
        If bReturn Then
            If OperadorDatos.EstaenTransaccion Then
            Else
                Me.AceptarCambios
            End If
        End If
        Return bReturn
    End Function
    
    Public Overridable Sub AceptarCambios()
        EsNuevo = false
        EsModificado = false
    End Sub
    
    Public Overridable Function Eliminar() As Boolean
        Dim bReturn As Boolean = true
        OperadorDatos.AgregarParametro("@accion", "E")
        OperadorDatos.AgregarParametro("@Usuari_Codigo", Usuari_Codigo)
        OperadorDatos.AgregarParametro("@Parame_Opciones", Parame_Opciones)
        OperadorDatos.AgregarParametro("@Pardet_Opciones", Pardet_Opciones)
        OperadorDatos.AgregarParametro("@Audito_Secuencia", Audito_Secuencia)
        OperadorDatos.Procedimiento = _Procedimiento
        bReturn = OperadorDatos.Ejecutar
        OperadorDatos.LimpiarParametros
        Return bReturn
    End Function
End Class
#End Region

#Region "AuditoriaList"
Public Class AuditoriaList
  Inherits System.ComponentModel.BindingList(Of Auditoria)
End Class
#End Region
