'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.5446
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos


#Region "PolizaDet"
Public Class PolizaDet

  Const _Procedimiento As String = "proc_PolizaDet"

  Private mActivo As Activo = Nothing

  Private mPoliza As Poliza = Nothing

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _OperadorDatos
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Poliza_Codigo As Integer, ByVal _Activo_Codigo As Integer)
    Me.New(_OperadorDatos, False)
    Poliza_Codigo = _Poliza_Codigo
    Activo_Codigo = _Activo_Codigo
    If Me.Recargar Then
    Else
      Throw New System.Exception("No se puede cargar objeto PolizaDet")
    End If
  End Sub

  'Activo
  Public Overridable Property Activo() As Activo
    Get
      If mActivo Is Nothing AndAlso Activo_Codigo > 0 Then
        mActivo = New Activo(OperadorDatos, Activo_Codigo)
      End If
      Return Me.mActivo
    End Get
    Set(value As Activo)
      Me.mActivo = value
      Activo_Codigo = value.Activo_Codigo
    End Set
  End Property

  'Poliza
  Public Overridable Property Poliza() As Poliza
    Get
      If mPoliza Is Nothing AndAlso Poliza_Codigo > 0 Then
        mPoliza = New Poliza(OperadorDatos, Poliza_Codigo)
      End If
      Return Me.mPoliza
    End Get
    Set(value As Poliza)
      Me.mPoliza = value
      mPoliza_Codigo = value.Poliza_Codigo
    End Set
  End Property

    <Infoware.Reportes.CampoReporteAtributo("Cod. Barra", Infoware.Reportes.CampoReporteAtributo.EnumTipoDato.Texto, 150, True)>
    Public ReadOnly Property CodigoBarraString As String
        Get
            If Activo Is Nothing Then
                Return String.Empty
            Else
                Return Activo.Activo_CodigoBarra
            End If
        End Get
    End Property

  <Infoware.Reportes.CampoReporteAtributo("Activo", Infoware.Reportes.CampoReporteAtributo.EnumTipoDato.Texto, 350, True)>
  Public ReadOnly Property ActivoString As String
    Get
      If Activo Is Nothing Then
        Return String.Empty
      Else
        Return Activo.Descripcion
      End If
    End Get
  End Property

  '<Infoware.Reportes.CampoReporteAtributo("Proveedor", Infoware.Reportes.CampoReporteAtributo.EnumTipoDato.Texto, 250, True)>
  'Public ReadOnly Property ProveedorString As String
  '  Get
  '    If Poliza Is Nothing Then
  '      Return String.Empty
  '    Else
  '      Return Poliza.ProveedorString
  '    End If
  '  End Get
  'End Property

  '<Infoware.Reportes.CampoReporteAtributo("Fecha inicio", Infoware.Reportes.CampoReporteAtributo.EnumTipoDato.Fecha, 120, True)>
  'Public ReadOnly Property FechaInicio As Date
  '  Get
  '    If Poliza Is Nothing Then
  '      Return Nothing
  '    Else
  '      Return Poliza.FechaInicio
  '    End If
  '  End Get
  'End Property

  '<Infoware.Reportes.CampoReporteAtributo("Fecha fin", Infoware.Reportes.CampoReporteAtributo.EnumTipoDato.Fecha, 120, True)>
  'Public ReadOnly Property Fechafin As Date
  '  Get
  '    If Poliza Is Nothing Then
  '      Return Nothing
  '    Else
  '      Return Poliza.Fechafin
  '    End If
  '  End Get
  'End Property

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Poliza_Codigo = CType(Fila("Poliza_Codigo"), Integer)
    Activo_Codigo = CType(Fila("Activo_Codigo"), Integer)
    mActivo = Nothing
    mPoliza = Nothing
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As System.Data.DataTable = New System.Data.DataTable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Poliza_Codigo", Poliza_Codigo)
    OperadorDatos.AgregarParametro("@Activo_Codigo", Activo_Codigo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    Dim Result As Integer = 0
    Dim bReturn As Boolean = True
    Dim sAccion As String = "M"
    If esNuevo Then
      sAccion = "I"
    End If
    OperadorDatos.AgregarParametro("@accion", sAccion)
    OperadorDatos.AgregarParametro("@Poliza_Codigo", Poliza_Codigo)
    OperadorDatos.AgregarParametro("@Activo_Codigo", Activo_Codigo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    If bReturn Then
      If Not OperadorDatos.EstaenTransaccion Then
        Me.AceptarCambios()
      End If
    End If
    Return bReturn
  End Function

  Public Overridable Sub AceptarCambios()
    EsNuevo = False
    EsModificado = False
  End Sub

  Public Overridable Function Eliminar() As Boolean
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Poliza_Codigo", Poliza_Codigo)
    OperadorDatos.AgregarParametro("@Activo_Codigo", Activo_Codigo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "PolizaDetList"
Public Class PolizaDetList
  Inherits System.ComponentModel.BindingList(Of PolizaDet)

  Public Shared Function ObtenerLista(ByVal _Poliza As Poliza, Optional ByVal _filtro As String = "") As PolizaDetList
    Dim oResult As New PolizaDetList
    Dim bReturn As Boolean
    Dim ds As DataTable = Nothing
    With _Poliza.OperadorDatos
      .AgregarParametro("@Accion", "F")
      .AgregarParametro("@Poliza_Codigo", _Poliza.Poliza_Codigo)
      .AgregarParametro("@filtro", _filtro)
      .Procedimiento = "proc_PolizaDet"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso Not ds Is Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New PolizaDet(_Poliza.OperadorDatos, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function

  Public Shared Function ObtenerLista(ByVal _Activo As Activo, Optional ByVal _filtro As String = "") As PolizaDetList
    Dim oResult As New PolizaDetList
    Dim bReturn As Boolean
    Dim ds As DataTable = Nothing
    With _Activo.OperadorDatos
      .AgregarParametro("@Accion", "F")
      .AgregarParametro("@Activo_Codigo", _Activo.Activo_Codigo)
      .AgregarParametro("@filtro", _filtro)
      .Procedimiento = "proc_PolizaDet"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso Not ds Is Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New PolizaDet(_Activo.OperadorDatos, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function

End Class
#End Region
