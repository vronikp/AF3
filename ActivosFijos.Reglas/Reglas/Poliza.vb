'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.5446
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos


#Region "Poliza"
Public Class Poliza

    Const _Procedimiento As String = "proc_Poliza"

    Private mPardetTipoPoliza As WWTSParametroDet = Nothing

  Private mProveedor As Proveedor = Nothing

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _OperadorDatos
    EsNuevo = _EsNuevo
  End Sub

    Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Poliza_Codigo As Integer, ByVal _Parame_TipoPoliza As Integer, ByVal _Pardet_TipoPoliza As Integer)
        Me.New(_OperadorDatos, False)
        Poliza_Codigo = _Poliza_Codigo
        Parame_TipoPoliza = _Parame_TipoPoliza
        Pardet_TipoPoliza = _Pardet_TipoPoliza
        If Me.Recargar Then
        Else
            Throw New System.Exception("No se puede cargar objeto Poliza")
        End If
    End Sub

  'Proveedor
  Public Overridable Property Proveedor() As Proveedor
    Get
      If mProveedor Is Nothing AndAlso Entida_Proveedor > 0 Then
        mProveedor = New Proveedor(OperadorDatos, Entida_Proveedor)
      End If
      Return Me.mProveedor
    End Get
    Set(value As Proveedor)
      Me.mProveedor = value
      Entida_Proveedor = value.Entida_Codigo
    End Set
    End Property

    'Parametrodet
    Public Overridable Overloads Property PardetTipoPoliza() As WWTSParametroDet
        Get
            If mPardetTipoPoliza Is Nothing AndAlso Pardet_TipoPoliza > 0 Then
                mPardetTipoPoliza = New WWTSParametroDet(OperadorDatos, Parame_TipoPoliza, Pardet_TipoPoliza)
            End If
            Return Me.mPardetTipoPoliza
        End Get
        Set(value As WWTSParametroDet)
            Me.mPardetTipoPoliza = value
            Parame_TipoPoliza = value.Parame_Codigo
            Pardet_TipoPoliza = value.Pardet_Secuencia
        End Set
    End Property

    <Infoware.Reportes.CampoReporteAtributo("Tipo de Poliza", Infoware.Reportes.CampoReporteAtributo.EnumTipoDato.Texto, 250, True)>
    Public ReadOnly Property TipoPolizaString As String
        Get
            If PardetTipoPoliza Is Nothing Then
                Return String.Empty
            Else
                Return PardetTipoPoliza.Descripcion
            End If
        End Get
    End Property

    <Infoware.Reportes.CampoReporteAtributo("Descripcion", Infoware.Reportes.CampoReporteAtributo.EnumTipoDato.Texto, 250, True)>
    Public ReadOnly Property PolizaDescripcionString As String
        Get
            If mPoliza_Descripcion Is Nothing Then
                Return String.Empty
            Else
                Return mPoliza_Descripcion
            End If
        End Get
    End Property

    <Infoware.Reportes.CampoReporteAtributo("Proveedor", Infoware.Reportes.CampoReporteAtributo.EnumTipoDato.Texto, 250, True)>
Public ReadOnly Property ProveedorString As String
        Get
            If Proveedor Is Nothing Then
                Return String.Empty
            Else
                Return Proveedor.NombreCompleto
            End If
        End Get
    End Property

  Public ReadOnly Property Descripcion As String
    Get
      Return String.Format("{0} {1}", ProveedorString, mPoliza_FechaInicio.ToShortDateString)
    End Get
  End Property

  <Infoware.Reportes.CampoReporteAtributo("Fecha inicio", Infoware.Reportes.CampoReporteAtributo.EnumTipoDato.Fecha, 120, True)>
  Public ReadOnly Property FechaInicio As Date
    Get
      Return Poliza_FechaInicio
    End Get
  End Property

  <Infoware.Reportes.CampoReporteAtributo("Fecha fin", Infoware.Reportes.CampoReporteAtributo.EnumTipoDato.Fecha, 120, True)>
  Public ReadOnly Property Fechafin As Date
    Get
      Return Poliza_FechaFin
    End Get
  End Property

#Region "PolizaDet"
  Private WithEvents mPolizaDets As PolizaDetList = Nothing
  Private mPolizaDetsEli As PolizaDetList = Nothing

  Public Property PolizaDets As PolizaDetList
    Get
      If mPolizaDets Is Nothing Then
        If EsNuevo Then
          mPolizaDets = New PolizaDetList
        Else
          mPolizaDets = PolizaDetList.ObtenerLista(Me)
        End If
      End If
      Return mPolizaDets
    End Get
    Set(value As PolizaDetList)
      mPolizaDets = value
    End Set
  End Property

  Public Property PolizaDetsEli As PolizaDetList
    Get
      If mPolizaDetsEli Is Nothing Then
        mPolizaDetsEli = New PolizaDetList
      End If
      Return mPolizaDetsEli
    End Get
    Set(value As PolizaDetList)
      mPolizaDetsEli = value
    End Set
  End Property

  Private Sub mPolizaDets_AddingNew(sender As Object, e As System.ComponentModel.AddingNewEventArgs) Handles mPolizaDets.AddingNew
    Dim _caract = New PolizaDet(OperadorDatos, True)
    _caract.Poliza = Me
    e.NewObject = _caract
  End Sub
#End Region

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Poliza_Codigo = CType(Fila("Poliza_Codigo"), Integer)
    Poliza_Descripcion = CType(Fila("Poliza_Descripcion"), String)
    Entida_Proveedor = CType(Fila("Entida_Proveedor"), Integer)
    Poliza_FechaInicio = CType(Fila("Poliza_FechaInicio"), String)
    Poliza_FechaFin = CType(Fila("Poliza_FechaFin"), String)
        Poliza_ValorAsegurado = CType(Fila("Poliza_ValorAsegurado"), Decimal)
        Parame_TipoPoliza = CType(Fila("Parame_TipoPoliza"), Integer)
        Pardet_TipoPoliza = CType(Fila("Pardet_TipoPoliza"), Integer)
    mProveedor = Nothing
    mPolizaDets = Nothing
    mPolizaDetsEli = Nothing
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As System.Data.DataTable = New System.Data.DataTable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Poliza_Codigo", Poliza_Codigo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    Dim Result As Integer = 0
    Dim bReturn As Boolean = True
    Dim sAccion As String = "M"
    If EsNuevo Then
      sAccion = "I"
    End If

    Dim _comenzotransaccion As Boolean = False
    If Not OperadorDatos.EstaenTransaccion Then
      OperadorDatos.ComenzarTransaccion()
      _comenzotransaccion = True
    End If

    OperadorDatos.AgregarParametro("@accion", sAccion)
    OperadorDatos.AgregarParametro("@Poliza_Codigo", Poliza_Codigo)
    OperadorDatos.AgregarParametro("@Poliza_Descripcion", Poliza_Descripcion)
    OperadorDatos.AgregarParametro("@Entida_Proveedor", Entida_Proveedor)
    OperadorDatos.AgregarParametro("@Poliza_FechaInicio", Poliza_FechaInicio)
    OperadorDatos.AgregarParametro("@Poliza_FechaFin", Poliza_FechaFin)
        OperadorDatos.AgregarParametro("@Poliza_ValorAsegurado", Poliza_ValorAsegurado)
        OperadorDatos.AgregarParametro("@Parame_TipoPoliza", Parame_TipoPoliza)
        OperadorDatos.AgregarParametro("@Pardet_TipoPoliza", Pardet_TipoPoliza)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    If bReturn Then
      If EsNuevo Then
        Poliza_Codigo = Result
      End If

      For Each _polidet As PolizaDet In PolizaDetsEli
        _polidet.Poliza = Me
        If Not _polidet.EsNuevo Then
          If Not _polidet.Eliminar Then
            bReturn = False
            Exit For
          End If
        End If
      Next

      For Each _polidet As PolizaDet In PolizaDets
        _polidet.Poliza = Me
        If Not _polidet.Guardar Then
          bReturn = False
          Exit For
        End If
      Next

      If Not OperadorDatos.EstaenTransaccion Then
        Me.AceptarCambios()
      End If
    End If
    If _comenzotransaccion Then
      If bReturn Then
        OperadorDatos.TerminarTransaccion()
        AceptarCambios()
      Else
        OperadorDatos.CancelarTransaccion()
      End If
    End If
    Return bReturn
  End Function

  Public Overridable Sub AceptarCambios()
    EsNuevo = False
    EsModificado = False
    mPolizaDetsEli = Nothing
    For Each _polidet As PolizaDet In PolizaDets
      _polidet.AceptarCambios()
    Next
  End Sub

  Public Overridable Function Eliminar() As Boolean
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Poliza_Codigo", Poliza_Codigo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "PolizaList"
Public Class PolizaList
  Inherits System.ComponentModel.BindingList(Of Poliza)

  Public Shared Function ObtenerLista(ByVal _OperadorDatos As OperadorDatos, Optional _Activo As Activo = Nothing, Optional ByVal _filtro As String = "") As PolizaList
    Dim oResult As New PolizaList
    Dim bReturn As Boolean
    Dim ds As DataTable = Nothing
    With _OperadorDatos
      .AgregarParametro("@Accion", "F")
      If _Activo IsNot Nothing Then
        .AgregarParametro("@Activo_Codigo", _Activo.Activo_Codigo)
      End If
      .AgregarParametro("@filtro", _filtro)
      .Procedimiento = "proc_Poliza"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso Not ds Is Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New Poliza(_OperadorDatos, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function
End Class
#End Region
