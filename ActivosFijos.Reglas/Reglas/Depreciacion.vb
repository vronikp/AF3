'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.5446
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports Infoware.Datos


#Region "Depreciacion"
Public Class Depreciacion

  Const _Procedimiento As String = "proc_Depreciacion"

  Private mPardetFrecuenciaDepreciacion As WWTSParametroDet = Nothing

  Private mPardetTipoDepreciacion As WWTSParametroDet = Nothing

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _EsNuevo As Boolean)
    MyBase.New()
    OperadorDatos = _OperadorDatos
    EsNuevo = _EsNuevo
  End Sub

  Public Sub New(ByVal _OperadorDatos As OperadorDatos, ByVal _Parame_FrecuenciaDepreciacion As Integer, ByVal _Pardet_FrecuenciaDepreciacion As Integer, ByVal _Parame_TipoDepreciacion As Integer, ByVal _Pardet_TipoDepreciacion As Integer, ByVal _Deprec_Codigo As String)
    Me.New(_OperadorDatos, False)
    Parame_FrecuenciaDepreciacion = _Parame_FrecuenciaDepreciacion
    Pardet_FrecuenciaDepreciacion = _Pardet_FrecuenciaDepreciacion
    Parame_TipoDepreciacion = _Parame_TipoDepreciacion
    Pardet_TipoDepreciacion = _Pardet_TipoDepreciacion
    Deprec_Codigo = _Deprec_Codigo
    If Me.Recargar Then
    Else
      Throw New System.Exception("No se puede cargar objeto Depreciacion")
    End If
  End Sub

  'Parametrodet
  Public Overridable Overloads Property PardetFrecuenciaDepreciacion As WWTSParametroDet
    Get
      If mPardetFrecuenciaDepreciacion Is Nothing AndAlso Pardet_FrecuenciaDepreciacion > 0 Then
        mPardetFrecuenciaDepreciacion = New WWTSParametroDet(OperadorDatos, Parame_FrecuenciaDepreciacion, Pardet_FrecuenciaDepreciacion)
      End If
      Return Me.mPardetFrecuenciaDepreciacion
    End Get
    Set(value As WWTSParametroDet)
      Me.mPardetFrecuenciaDepreciacion = value
      Parame_FrecuenciaDepreciacion = value.Parame_Codigo
      Pardet_FrecuenciaDepreciacion = value.Pardet_Secuencia
    End Set
  End Property

  'Parametrodet
  Public Overridable Overloads Property PardetTipoDepreciacion As WWTSParametroDet
    Get
      If mPardetTipoDepreciacion Is Nothing AndAlso Pardet_TipoDepreciacion > 0 Then
        mPardetTipoDepreciacion = New WWTSParametroDet(OperadorDatos, Parame_TipoDepreciacion, Pardet_TipoDepreciacion)
      End If
      Return Me.mPardetTipoDepreciacion
    End Get
    Set(value As WWTSParametroDet)
      Me.mPardetTipoDepreciacion = value
      Parame_TipoDepreciacion = value.Parame_Codigo
      Pardet_TipoDepreciacion = value.Pardet_Secuencia
    End Set
  End Property

  Public Overridable Sub MapearDataRowaObjeto(ByVal Fila As DataRow)
    Parame_FrecuenciaDepreciacion = CType(Fila("Parame_FrecuenciaDepreciacion"), Integer)
    Pardet_FrecuenciaDepreciacion = CType(Fila("Pardet_FrecuenciaDepreciacion"), Integer)
    Parame_TipoDepreciacion = CType(Fila("Parame_TipoDepreciacion"), Integer)
    Pardet_TipoDepreciacion = CType(Fila("Pardet_TipoDepreciacion"), Integer)
    Deprec_Codigo = CType(Fila("Deprec_Codigo"), String)
    Deprec_Observacion = CType(Fila("Deprec_Observacion"), String)
    Deprec_esProyeccion = CBool(Fila("Deprec_esProyeccion"))
    mPardetFrecuenciaDepreciacion = Nothing
    mPardetTipoDepreciacion = Nothing
  End Sub

  Public Overridable Function Recargar() As Boolean
    Dim Result As System.Data.DataTable = New System.Data.DataTable
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "C")
    OperadorDatos.AgregarParametro("@Parame_FrecuenciaDepreciacion", Parame_FrecuenciaDepreciacion)
    OperadorDatos.AgregarParametro("@Pardet_FrecuenciaDepreciacion", Pardet_FrecuenciaDepreciacion)
    OperadorDatos.AgregarParametro("@Parame_TipoDepreciacion", Parame_TipoDepreciacion)
    OperadorDatos.AgregarParametro("@Pardet_TipoDepreciacion", Pardet_TipoDepreciacion)
    OperadorDatos.AgregarParametro("@Deprec_Codigo", Deprec_Codigo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Try
      Me.MapearDataRowaObjeto(Result.Rows(0))
      EsNuevo = False
      EsModificado = False
    Catch ex As System.Exception
      bReturn = False
    End Try
    Return bReturn
  End Function

  Public Overridable Function Guardar() As Boolean
    Dim Result As Integer = 0
    Dim bReturn As Boolean = True
    Dim sAccion As String = "M"
    If EsNuevo Then
      sAccion = "I"
    End If
    OperadorDatos.AgregarParametro("@accion", sAccion)
    OperadorDatos.AgregarParametro("@Parame_FrecuenciaDepreciacion", Parame_FrecuenciaDepreciacion)
    OperadorDatos.AgregarParametro("@Pardet_FrecuenciaDepreciacion", Pardet_FrecuenciaDepreciacion)
    OperadorDatos.AgregarParametro("@Parame_TipoDepreciacion", Parame_TipoDepreciacion)
    OperadorDatos.AgregarParametro("@Pardet_TipoDepreciacion", Pardet_TipoDepreciacion)
    OperadorDatos.AgregarParametro("@Deprec_Codigo", Deprec_Codigo)
    OperadorDatos.AgregarParametro("@Deprec_Observacion", Deprec_Observacion)
    OperadorDatos.AgregarParametro("@Deprec_esProyeccion", Deprec_esProyeccion)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    If bReturn Then
      If OperadorDatos.EstaenTransaccion Then
      Else
        Me.AceptarCambios()
      End If
    End If
    Return bReturn
  End Function

  Public Overridable Sub AceptarCambios()
    EsNuevo = False
    EsModificado = False
  End Sub

  Public Overridable Function UltimoPeriodo() As String
    Dim Result As String = String.Empty
    Dim bReturn As Boolean = True
    OperadorDatos.AgregarParametro("@accion", "Up")
    OperadorDatos.AgregarParametro("@Parame_FrecuenciaDepreciacion", Parame_FrecuenciaDepreciacion)
    OperadorDatos.AgregarParametro("@Pardet_FrecuenciaDepreciacion", Pardet_FrecuenciaDepreciacion)
    OperadorDatos.AgregarParametro("@Parame_TipoDepreciacion", Parame_TipoDepreciacion)
    OperadorDatos.AgregarParametro("@Pardet_TipoDepreciacion", Pardet_TipoDepreciacion)
    'OperadorDatos.AgregarParametro("@Deprec_Codigo", Deprec_Codigo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar(Result)
    OperadorDatos.LimpiarParametros()
    Return Result
  End Function

  Public Overridable Function Eliminar() As Boolean
    Dim bReturn As Boolean = True
    Dim ultimo As String = UltimoPeriodo()
    If Not Deprec_esProyeccion AndAlso Not ultimo = Deprec_Codigo Then
      Throw New Exception(String.Format("Solo es posible eliminar el último periodo generado ({0})", ultimo))
    End If
    OperadorDatos.AgregarParametro("@accion", "E")
    OperadorDatos.AgregarParametro("@Parame_FrecuenciaDepreciacion", Parame_FrecuenciaDepreciacion)
    OperadorDatos.AgregarParametro("@Pardet_FrecuenciaDepreciacion", Pardet_FrecuenciaDepreciacion)
    OperadorDatos.AgregarParametro("@Parame_TipoDepreciacion", Parame_TipoDepreciacion)
    OperadorDatos.AgregarParametro("@Pardet_TipoDepreciacion", Pardet_TipoDepreciacion)
    OperadorDatos.AgregarParametro("@Deprec_Codigo", Deprec_Codigo)
    OperadorDatos.Procedimiento = _Procedimiento
    bReturn = OperadorDatos.Ejecutar
    OperadorDatos.LimpiarParametros()
    Return bReturn
  End Function
End Class
#End Region

#Region "DepreciacionList"
Public Class DepreciacionList
  Inherits System.ComponentModel.BindingList(Of Depreciacion)

  Public Shared Function ObtenerLista(ByVal _OperadorDatos As OperadorDatos, _PardetFrecuenciaDepreciacion As WWTSParametroDet, _PardetTipoDepreciacion As WWTSParametroDet) As DepreciacionList
    Dim oResult As New DepreciacionList
    Dim bReturn As Boolean
    Dim ds As DataTable = Nothing
    With _OperadorDatos
      .AgregarParametro("@Accion", "F")
      .AgregarParametro("@Parame_FrecuenciaDepreciacion", _PardetFrecuenciaDepreciacion.Parame_Codigo)
      .AgregarParametro("@Pardet_FrecuenciaDepreciacion", _PardetFrecuenciaDepreciacion.Pardet_Secuencia)
      .AgregarParametro("@Parame_TipoDepreciacion", _PardetTipoDepreciacion.Parame_Codigo)
      .AgregarParametro("@Pardet_TipoDepreciacion", _PardetTipoDepreciacion.Pardet_Secuencia)
      .Procedimiento = "proc_Depreciacion"
      bReturn = .Ejecutar(ds)
      .LimpiarParametros()
    End With
    If bReturn AndAlso Not ds Is Nothing AndAlso ds.Rows.Count > 0 Then
      For Each _dr As DataRow In ds.Rows
        Dim _fila As New Depreciacion(_OperadorDatos, False)
        _fila.MapearDataRowaObjeto(_dr)
        oResult.Add(_fila)
      Next
    End If
    Return oResult
  End Function
End Class
#End Region
